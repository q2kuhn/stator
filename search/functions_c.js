var searchData=
[
  ['operator_20double',['operator double',['../structsym_1_1C.html#a745d6a51b5b9d34f3d315b53d5efdae0',1,'sym::C']]],
  ['operator_28_29',['operator()',['../structstator_1_1orphan_1_1detail_1_1static__foreach__helper_3_01Index_00_01End_00_01static__list30ab6706ed7b9bba765ccb541b84dea5.html#af3b753d0028805b6e4e52b604351e63e',1,'stator::orphan::detail::static_foreach_helper&lt; Index, End, static_list&lt; T, ListItems... &gt; &gt;::operator()()'],['../structstator_1_1orphan_1_1detail_1_1static__foreach__helper_3_01End_00_01End_00_01static__list_3aac528687aee204dbccd44b0b3bae9a5.html#a307105807626c79f8141c784e5552af3',1,'stator::orphan::detail::static_foreach_helper&lt; End, End, static_list&lt; T, ListItems... &gt; &gt;::operator()()'],['../structstator_1_1orphan_1_1static__foreach_3_01static__list_3_01T_00_01ListItems_8_8_8_01_4_01_4.html#a1f97531d179fe4241996752865161f03',1,'stator::orphan::static_foreach&lt; static_list&lt; T, ListItems... &gt; &gt;::operator()()']]],
  ['operator_2a',['operator*',['../namespacesym.html#a032d4ad59025b3d3ee2effe132490e3a',1,'sym::operator*(C&lt; n1, d1 &gt;, C&lt; n2, d2 &gt;) -&gt; STATOR_AUTORETURN((typename C_wrap&lt; std::ratio_multiply&lt; std::ratio&lt; n1, d1 &gt;, std::ratio&lt; n2, d2 &gt; &gt; &gt;::type()))'],['../namespacesym.html#aad46db8ac9f445bb461860188a717462',1,'sym::operator*(const T &amp;, Null)'],['../namespacesym.html#a67f75fc4bdf4aa838a38d580e6051d56',1,'sym::operator*(Null, const T &amp;)'],['../namespacesym.html#a0976a9156d279dcd9f3923a6610f1763',1,'sym::operator*(const T &amp;a, Unity) -&gt; STATOR_AUTORETURN(a)'],['../namespacesym.html#a379cbf9cd09efb2c9dc308fc0a5aaf09',1,'sym::operator*(Unity, const T &amp;a) -&gt; STATOR_AUTORETURN(a)']]],
  ['operator_2b',['operator+',['../namespacesym.html#ab7208e743cf99a20283ae0a7901ec4b1',1,'sym::operator+(C&lt; n1, d1 &gt;, C&lt; n2, d2 &gt;) -&gt; STATOR_AUTORETURN((typename C_wrap&lt; std::ratio_add&lt; std::ratio&lt; n1, d1 &gt;, std::ratio&lt; n2, d2 &gt; &gt; &gt;::type()))'],['../namespacesym.html#a04d6ee75bb7a83341b9a8ebf7ff45719',1,'sym::operator+(const T &amp;l, Null)'],['../namespacesym.html#a8e75bb6736c520631c4e2683e92ce2c4',1,'sym::operator+(Null, const T &amp;r)'],['../namespacesym.html#ae7182e79f22bf342c1dfc9edf51271a8',1,'sym::operator+(const Arg &amp;l)']]],
  ['operator_2d',['operator-',['../classsym_1_1Polynomial.html#a73e2900178885c27cb1c299f404b126c',1,'sym::Polynomial::operator-()'],['../namespacesym.html#a880a540e92f9fb0c37d931405167fa91',1,'sym::operator-(C&lt; n1, d1 &gt;, C&lt; n2, d2 &gt;) -&gt; STATOR_AUTORETURN((typename C_wrap&lt; std::ratio_subtract&lt; std::ratio&lt; n1, d1 &gt;, std::ratio&lt; n2, d2 &gt; &gt; &gt;::type()))'],['../namespacesym.html#ae533696fd5f51d930f32b897ca66f807',1,'sym::operator-(const T &amp;l, Null)'],['../namespacesym.html#a746af72a7758cb359280182e4b18e83c',1,'sym::operator-(Null, const T &amp;r) -&gt; STATOR_AUTORETURN(-r)'],['../namespacesym.html#a16364468559b79cd90ec9711cc89db0c',1,'sym::operator-(const Arg &amp;l) -&gt; STATOR_AUTORETURN(C&lt;-1 &gt;()*l) template&lt; class LHS, class RHS, typename=typename std::enable_if&lt; ApplySymbolicOps&lt; LHS, RHS &gt;::value &gt;::type &gt;auto operator+(const LHS &amp;l, const RHS &amp;r) -&gt; STATOR_AUTORETURN((AddOp&lt; decltype(store(l)), decltype(store(r))&gt;(l, r))) template&lt; class LHS, class RHS, typename=typename std::enable_if&lt; ApplySymbolicOps&lt; LHS, RHS &gt;::value &gt;::type &gt;auto operator*(const LHS &amp;l, const RHS &amp;r) -&gt; STATOR_AUTORETURN((MultiplyOp&lt; decltype(store(l)), decltype(store(r))&gt;(l, r))) template&lt; class LHS, class RHS, typename=typename std::enable_if&lt; ApplySymbolicOps&lt; LHS, RHS &gt;::value &gt;::type &gt;auto operator-(const LHS &amp;l, const RHS &amp;r) -&gt; STATOR_AUTORETURN((SubtractOp&lt; decltype(store(l)), decltype(store(r))&gt;(l, r))) template&lt; class LHS, class RHS, typename=typename std::enable_if&lt; ApplySymbolicOps&lt; LHS, RHS &gt;::value &gt;::type &gt;auto operator/(const LHS &amp;l, const RHS &amp;r) -&gt; STATOR_AUTORETURN((DivideOp&lt; decltype(store(l)), decltype(store(r))&gt;(l, r))) template&lt; class LHS, class RHS, typename=typename std::enable_if&lt; ApplySymbolicOps&lt; LHS, RHS &gt;::value &gt;::type &gt;auto dot(const LHS &amp;l, const RHS &amp;r) -&gt; STATOR_AUTORETURN((DotOp&lt; decltype(store(l)), decltype(store(r))&gt;(l, r)))']]],
  ['operator_2f',['operator/',['../namespacesym.html#ac66e72bd7e91038958a1215e9c64b70f',1,'sym']]],
  ['operator_3c_3c',['operator&lt;&lt;',['../classstator_1_1Exception.html#a4f00a0d695d111eab9719b7fd1cefa28',1,'stator::Exception::operator&lt;&lt;()'],['../classsym_1_1Polynomial.html#ae872d2ebb6bdf64fae7458b4f629fcc8',1,'sym::Polynomial::operator&lt;&lt;()'],['../namespacestator_1_1orphan.html#a7c8ab5f439efc0386e3db51ea0a059a4',1,'stator::orphan::operator&lt;&lt;(std::ostream &amp;os, const StackVector&lt; T, Nmax &gt; &amp;s)'],['../namespacestator_1_1orphan.html#a4ad5d29279b40268ea082aa9f74bc470',1,'stator::orphan::operator&lt;&lt;(std::ostream &amp;os, const StackVector&lt; std::pair&lt; T1, T2 &gt;, Nmax &gt; &amp;s)'],['../namespacestator_1_1orphan.html#ad6581b196e7fd5f69ed400b98cfc7d51',1,'stator::orphan::operator&lt;&lt;(std::ostream &amp;os, const StackVector&lt; std::tuple&lt; Tp... &gt;, Nmax &gt; &amp;s)'],['../namespacesym.html#a69f422b23b1c7a7095c025d837975d58',1,'sym::operator&lt;&lt;(std::ostream &amp;os, const C&lt; Num, Denom &gt;)'],['../namespacesym.html#a8d4ab2f71e5d3b8299ca931e508dd5a3',1,'sym::operator&lt;&lt;(std::ostream &amp;os, const C&lt; 1, 4 &gt;)'],['../namespacesym.html#a66a7c7033e0cb23c67ce28a4c76a3eb1',1,'sym::operator&lt;&lt;(std::ostream &amp;os, const C&lt; 1, 2 &gt;)'],['../namespacesym.html#ac5fae698db07f524196b98d908b64d41',1,'sym::operator&lt;&lt;(std::ostream &amp;os, const C&lt; 3, 4 &gt;)'],['../namespacesym.html#a4f8ebf1d9e8ab8cd1dd4b4d8be0c933a',1,'sym::operator&lt;&lt;(std::ostream &amp;os, const pi)'],['../namespacesym.html#a513ad8f7b283d885a06f6a4385b548b7',1,'sym::operator&lt;&lt;(std::ostream &amp;os, const std::complex&lt; T &gt; &amp;c)'],['../namespacesym.html#aa867192d2b3110d8558858d39784e038',1,'sym::operator&lt;&lt;(std::ostream &amp;os, const UnaryOp&lt; Arg, Op &gt; &amp;f)'],['../namespacesym.html#ad901f9fe2423c97808d2e659b331f032',1,'sym::operator&lt;&lt;(std::ostream &amp;os, const BinaryOp&lt; LHS, Op, RHS &gt; &amp;op)'],['../namespacesym_1_1detail.html#a4561ec32712d1cf0a7da18cefc2147d2',1,'sym::detail::operator&lt;&lt;()'],['../namespacesym.html#a4a07752eadd0240d7c6cf0c47e03e728',1,'sym::operator&lt;&lt;(std::ostream &amp;os, const Var&lt; Args... &gt; &amp;)'],['../namespacesym.html#a02d11e3c3a77fb42195ffd8fa60b1f93',1,'sym::operator&lt;&lt;(std::ostream &amp;os, const VarSub&lt; Var, Arg &gt; &amp;sub)']]],
  ['operator_3d_3d',['operator==',['../structsym_1_1Var.html#a7207a2a6772c04f246f51a13c23cd676',1,'sym::Var::operator==()'],['../namespacesym.html#a2e8a40d49b29b0d484d5a7af1021892f',1,'sym::operator==()']]],
  ['output_5fhelper',['output_helper',['../structsym_1_1detail_1_1SturmChain.html#a1deedb0f55c91c89973fbdb3d885108f',1,'sym::detail::SturmChain::output_helper()'],['../structsym_1_1detail_1_1SturmChain_3_010_00_01Coeff__t_00_01PolyVar_01_4.html#a95e7a8e3a6312b4dbfa0b50500ed5915',1,'sym::detail::SturmChain&lt; 0, Coeff_t, PolyVar &gt;::output_helper()']]]
];
