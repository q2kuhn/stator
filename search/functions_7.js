var searchData=
[
  ['indicator',['indicator',['../namespacestator_1_1geometry.html#af818e52112e93b391926f33246641bd1',1,'stator::geometry::indicator(const Ball&lt; Scalar, D &gt; &amp;bi, const Point&lt; Scalar, D &gt; &amp;bj, const DeltaRijFunc &amp;deltarij) -&gt; STATOR_AUTORETURN_BYVALUE(pow&lt; 2 &gt;(try_simplify(deltarij+bi.center()-bj.center()))-pow&lt; 2 &gt;(bi.radius()))'],['../namespacestator_1_1geometry.html#af6fdc678565d2c741cd542d75dad5e3a',1,'stator::geometry::indicator(const Point&lt; Scalar, D &gt; &amp;bi, const Ball&lt; Scalar, D &gt; &amp;bj, const DeltaRijFunc &amp;deltarij) -&gt; STATOR_AUTORETURN_BYVALUE(indicator(bj, bi,-deltarij))'],['../namespacestator_1_1geometry.html#a6761e670df888e999da5d01ba9777ec7',1,'stator::geometry::indicator(const Ball&lt; Scalar, D &gt; &amp;bi, const Ball&lt; Scalar, D &gt; &amp;bj, const DeltaRijFunc &amp;deltarij) -&gt; STATOR_AUTORETURN_BYVALUE(pow&lt; 2 &gt;(try_simplify(deltarij+bi.center()-bj.center()))-pow&lt; 2 &gt;(bi.radius()+bj.radius()))'],['../namespacestator_1_1geometry.html#a3e7c8cea904fc6d949cdb6ffff033265',1,'stator::geometry::indicator(const Ball&lt; Scalar, D &gt; &amp;bi, const HalfSpace&lt; Scalar, D &gt; &amp;bj, const DeltaRijFunc &amp;deltarij) -&gt; STATOR_AUTORETURN_BYVALUE(try_simplify(dot(bj.normal(), deltarij+bi.center()-bj.center())-bi.radius()))'],['../namespacestator_1_1geometry.html#a6aa1cf33fe97364be9f6001971163807',1,'stator::geometry::indicator(const HalfSpace&lt; Scalar, D &gt; &amp;bi, const Ball&lt; Scalar, D &gt; &amp;bj, const DeltaRijFunc &amp;deltarij) -&gt; STATOR_AUTORETURN_BYVALUE(indicator(bj, bi,-deltarij))']]],
  ['integrate',['integrate',['../namespacesym.html#ada5df56010b450fc6e0eb6da9b900690',1,'sym::integrate(const T &amp;a, Var) -&gt; typename std::enable_if&lt; std::is_same&lt; decltype(store(derivative(a, Var()))), Null &gt;::value, decltype(store(a *Var()))&gt;::type'],['../namespacesym.html#aac877efbb24cbf3fb457e82d825c6288',1,'sym::integrate(const AddOp&lt; LHS, RHS &gt; &amp;a, Var&lt; VarArgs... &gt; x) -&gt; STATOR_AUTORETURN(integrate(a._l, x)+integrate(a._r, x))'],['../namespacesym.html#a3e58b010224835bccf70c9e05830a73f',1,'sym::integrate(Var&lt; VarArgs1... &gt;, Var&lt; VarArgs2... &gt;) -&gt; STATOR_AUTORETURN((C&lt; 1, 2 &gt;()*pow&lt; 2 &gt;(typename variable_combine&lt; Var&lt; VarArgs1... &gt;, Var&lt; VarArgs2... &gt; &gt;::type())))'],['../namespacesym.html#ac3df2613b8050607f54edd7f7dac9bf3',1,'sym::integrate(const PowerOp&lt; Var&lt; VarArgs1... &gt;, C&lt; Power &gt; &gt; &amp;a, Var&lt; VarArgs2... &gt;) -&gt; STATOR_AUTORETURN((C&lt; 1, Power+1 &gt;()*pow(typename variable_combine&lt; Var&lt; VarArgs1... &gt;, Var&lt; VarArgs2... &gt; &gt;::type(), C&lt; Power+1 &gt;())))']]],
  ['intersects',['intersects',['../namespacestator_1_1geometry.html#abf79fa5b1c68b6ba03623cc1e67d0ea5',1,'stator::geometry']]],
  ['invert_5ftaylor_5fshift',['invert_taylor_shift',['../structsym_1_1MobiusTransform.html#a02d7d5b4578851b10802d29e26569797',1,'sym::MobiusTransform::invert_taylor_shift()'],['../classsym_1_1Polynomial.html#a829978b210f4e4f2a360ec279bf1e0d4',1,'sym::Polynomial::invert_taylor_shift()']]]
];
