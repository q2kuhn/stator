environment:
  global:
    P: "c:/projects/libs"
    BOOST_ROOT: c:\Libraries\boost_1_59_0
    BOOST_LIBRARYDIR_WIN32: C:\Libraries\boost_1_59_0\lib32-msvc-14.0
    BOOST_LIBRARYDIR_WIN64: C:\Libraries\boost_1_59_0\lib64-msvc-14.0
    
os: Visual Studio 2015

version: stator-{build}

# scripts that are called at very beginning, before repo cloning
init:
  # Disable popups as they hang the build as there is nobody to click on the OK button...
  # Hanging the build is a lot less user friendly than reporting a build failure.
  #
  # Disable of system hard error popup
  # See: https://msdn.microsoft.com/en-us/library/bb513638%28VS.85%29.aspx
  - reg add "HKLM\SYSTEM\CurrentControlSet\Control\Windows" /f /v ErrorMode /d 2
  # Disable the following popup on program failure:
  #     |       ** <program name> has stopped working **        |
  #     | Windows can check online for a solution to the problem|
  #     |  - Check online for a solution and close the program  |
  #     |  - Close the program                                  |
  # See: https://msdn.microsoft.com/en-us/library/bb513638%28VS.85%29.aspx
  - reg add "HKLM\Software\Microsoft\Windows\Windows Error Reporting" /f /v DontShowUI /d 1

platform:
  - Win32
  - x64

configuration: Release

install:
  - cmd: cd c:\projects\dynamo
  - cmd: git submodule init
  - cmd: git submodule update


clone_folder: c:\projects\dynamo

before_build:
  #Xamarin (a unused SDK) fills the build log with warnings, so delete it
  - del "C:\Program Files (x86)\MSBuild\14.0\Microsoft.Common.targets\ImportAfter\Xamarin.Common.targets"
  - echo "#  Configuring..."
  - cmd: md build
  - cmd: cd build
  - echo Running cmake...
  - cmd: if "%platform%"=="Win32" cmake .. -G "Visual Studio 14 2015" -DCMAKE_BUILD_TYPE=%configuration% -DBOOST_ROOT="%BOOST_ROOT%" -DBOOST_LIBRARYDIR="%BOOST_LIBRARYDIR_WIN32%"
  - cmd: if "%platform%"=="x64" cmake .. -G "Visual Studio 14 2015 Win64" -DCMAKE_BUILD_TYPE=%configuration% -DBOOST_ROOT="%BOOST_ROOT%" -DBOOST_LIBRARYDIR="%BOOST_LIBRARYDIR_WIN64%"
  - cmd: cd ..

build_script:
  - echo "#  Building..."
  - cd build
  - cmake --build . --config %configuration%
  - cd ..

test_script:
  - cd build
  - set CTEST_OUTPUT_ON_FAILURE=1
  - ctest --build-config %configuration%
  - cd ..

